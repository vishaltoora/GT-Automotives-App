import { InvoicesService } from './invoices.service';
import { CreateInvoiceDto } from '../common/dto/invoice.dto';
import { UpdateInvoiceDto } from '../common/dto/invoice.dto';
import { CreateServiceDto, UpdateServiceDto } from '../common/dto/service.dto';
import { InvoiceStatus, PaymentMethod } from '@prisma/client';
export declare class InvoicesController {
    private readonly invoicesService;
    constructor(invoicesService: InvoicesService);
    create(createInvoiceDto: CreateInvoiceDto, user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    findAll(user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    search(customerName?: string, invoiceNumber?: string, startDate?: string, endDate?: string, status?: InvoiceStatus, companyId?: string, user?: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    getDailyCashReport(date: string, user: any): Promise<any>;
    getCustomerInvoices(customerId: string, user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    findOne(id: string, user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    update(id: string, updateInvoiceDto: UpdateInvoiceDto, user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    markAsPaid(id: string, paymentMethod: PaymentMethod, user: any): Promise<{
        id: string;
        invoiceDate: Date;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        createdAt: Date;
        updatedAt: Date;
        total: import(".prisma/client/runtime/library").Decimal;
        invoiceNumber: string;
        customerId: string;
        vehicleId: string | null;
        companyId: string;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    remove(id: string, user: any): Promise<void>;
    getAllServices(): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        unitPrice: import(".prisma/client/runtime/library").Decimal;
    }[]>;
    createService(createServiceDto: CreateServiceDto): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        unitPrice: import(".prisma/client/runtime/library").Decimal;
    }>;
    updateService(id: string, updateServiceDto: UpdateServiceDto): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        unitPrice: import(".prisma/client/runtime/library").Decimal;
    }>;
    deleteService(id: string): Promise<{
        name: string;
        id: string;
        description: string | null;
        createdAt: Date;
        updatedAt: Date;
        unitPrice: import(".prisma/client/runtime/library").Decimal;
    }>;
}
//# sourceMappingURL=invoices.controller.d.ts.map