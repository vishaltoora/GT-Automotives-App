import { InvoicesService } from './invoices.service';
import { CreateInvoiceDto } from './dto/create-invoice.dto';
import { UpdateInvoiceDto } from './dto/update-invoice.dto';
import { InvoiceStatus, PaymentMethod } from '@prisma/client';
export declare class InvoicesController {
    private readonly invoicesService;
    constructor(invoicesService: InvoicesService);
    create(createInvoiceDto: CreateInvoiceDto, user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    findAll(user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    search(customerName?: string, invoiceNumber?: string, startDate?: string, endDate?: string, status?: InvoiceStatus, user?: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    getDailyCashReport(date: string, user: any): Promise<any>;
    getCustomerInvoices(customerId: string, user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }[]>;
    findOne(id: string, user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    update(id: string, updateInvoiceDto: UpdateInvoiceDto, user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    markAsPaid(id: string, paymentMethod: PaymentMethod, user: any): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        customerId: string;
        total: import(".prisma/client/runtime/library").Decimal;
        status: import("@prisma/client").$Enums.InvoiceStatus;
        invoiceNumber: string;
        vehicleId: string | null;
        subtotal: import(".prisma/client/runtime/library").Decimal;
        taxRate: import(".prisma/client/runtime/library").Decimal;
        taxAmount: import(".prisma/client/runtime/library").Decimal;
        paymentMethod: import("@prisma/client").$Enums.PaymentMethod | null;
        notes: string | null;
        createdBy: string;
        paidAt: Date | null;
        gstAmount: import(".prisma/client/runtime/library").Decimal | null;
        gstRate: import(".prisma/client/runtime/library").Decimal | null;
        pstAmount: import(".prisma/client/runtime/library").Decimal | null;
        pstRate: import(".prisma/client/runtime/library").Decimal | null;
    }>;
    remove(id: string, user: any): Promise<void>;
}
//# sourceMappingURL=invoices.controller.d.ts.map