{
  "permissions": {
    "allow": [
      "Bash(DATABASE_URL=\"postgresql://postgres@localhost:5432/gt_automotive?schema=public\" npx prisma db push --accept-data-loss --schema=libs/database/src/lib/prisma/schema.prisma)",
      "Bash(DATABASE_URL=\"postgresql://postgres@localhost:5432/gt_automotive?schema=public\" psql -c \"SELECT id, \"\"scheduledDate\"\", \"\"scheduledTime\"\", duration, \"\"serviceType\"\", \"\"employeeId\"\" FROM \"\"Appointment\"\" WHERE \"\"scheduledTime\"\" = ''14:00'' AND status IN (''SCHEDULED'', ''CONFIRMED'', ''IN_PROGRESS'') ORDER BY \"\"scheduledDate\"\" DESC LIMIT 10;\")",
      "Bash(DATABASE_URL=\"postgresql://postgres@localhost:5432/gt_automotive?schema=public\" psql -c \"SELECT id, scheduled_date, scheduled_time, duration, service_type, employee_id FROM appointment WHERE scheduled_time = ''14:00'' AND status IN (''SCHEDULED'', ''CONFIRMED'', ''IN_PROGRESS'') ORDER BY scheduled_date DESC LIMIT 10;\")",
      "Bash(yarn tsc --noEmit)",
      "Bash(git add -A)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: comprehensive mobile UI/UX optimization across application\n\nMobile-Friendly Enhancements:\n- Payment dialog: full-screen on mobile with responsive layout\n- Jobs management: collapsible filters, 2x2 stats grid, edge-to-edge layout\n- Payments management: compact employee cards, minimal spacing\n- Invoice list: collapsible filters, removed analytics cards\n- Inventory dashboard: 2x2 stats grid, compact layout\n\nCustomer Management Improvements:\n- Card view on mobile, table view on desktop\n- Three-dot menu for Edit/Delete actions in card header\n- TablePagination component (10 items per page)\n- Floating add button beside search field on mobile\n- Phone number displayed below customer name in bold\n\nInventory Optimizations:\n- Tire cards: compact design with condition chip beside brand name\n- Size and type on single line (e.g., \"235/65R17 â€¢ All Season\")\n- Three-dot menu in card header for Edit/Delete\n- Removed View Details button for cleaner layout\n- Tire dialog: full-screen on mobile with primary color header\n- Floating add button on mobile, removed refresh/download buttons\n- Removed sort dropdown for simplified interface\n\nAdmin Dashboard:\n- Removed Expense Invoice, Purchase Invoice, Add Tire, Customer from quick actions\n- Grid layout updated from 6 to 5 columns\n\nTechnical Improvements:\n- Consistent primary color (GT Navy) for all dialog headers\n- Edge-to-edge layouts on mobile screens\n- Responsive typography and spacing throughout\n- All components pass TypeScript type checking\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin main)",
      "Bash(git add .github/workflows/gt-build.yml)",
      "Bash(git add apps/webApp/src/app/pages/staff/Dashboard.tsx)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: add Google Maps API key to build process and reorganize staff dashboard\n\nGoogle Maps Integration:\n- Added VITE_GOOGLE_MAPS_API_KEY to GitHub Actions build step\n- Ensures environment variables are available during Vite build time\n- Fixes Google Maps \"NoApiKeys\" and \"InvalidKey\" warnings in production\n\nStaff Dashboard UX:\n- Moved \"Appointments\" quick action directly under \"New Appointment\"\n- Improved workflow by grouping related appointment actions together\n- Updated Quick Navigation grid from 4 to 3 columns\n- Better visual hierarchy for staff operations\n\nTechnical Details:\n- Vite performs static replacement of import.meta.env at build time\n- Azure App Service env vars only available at runtime (not build time)\n- Solution: Use GitHub Secrets for build-time environment variables\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"fix: remove duplicate env block in GitHub Actions workflow\n\n- Merged duplicate env blocks into single block\n- Fixed workflow validation error\n- Maintains all required environment variables for build\")",
      "Bash(yarn typecheck)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: quotation to invoice conversion with auto-tracking and UI improvements\n\nQuotation Conversion Features:\n- Fixed 404 error when converting quotation to invoice\n- InvoiceDetails now handles ''new'' route with InvoiceDialog\n- Quotation data automatically pre-fills invoice form\n- Quotation status updated to ''CONVERTED'' after invoice creation\n- Added convertedToInvoiceId field to link quotation with invoice\n- Status display shows \"Converted to Invoice\" instead of \"CONVERTED\"\n\nTechnical Fixes:\n- Fixed NaN taxRate error caused by string tax rates\n- Added Number() conversion for gstRate and pstRate\n- Fixed timing issue with companies loading before quotation data\n- Made loadData() async and return loaded data\n- loadQuotationData() now receives companies as parameter\n- Enhanced error logging for invoice creation debugging\n\nFrontend Updates:\n- Added getStatusLabel() helper in QuotationList and QuotationDetails\n- Status labels now user-friendly across all quotation views\n- Updated UpdateQuoteDto to include convertedToInvoiceId field\n- InvoiceDialog accepts quotationId prop for conversion\n\nBackend Updates:\n- Added convertedToInvoiceId to UpdateQuoteDto validation\n- Repository already has convertToInvoice() method support\n\nTypeScript Fixes:\n- Removed unused imports in Dashboard, CustomerList, TireListSimple\n- Fixed React.cloneElement type error in InventoryDashboard\n- Commented out unused functions for future implementation\n- All projects now pass strict type checking\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
