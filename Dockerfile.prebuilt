# Use pre-built files from local build to avoid Docker TypeScript compilation issues
FROM node:20-slim

WORKDIR /app

# Install system dependencies for Prisma
RUN apt-get update && apt-get install -y openssl curl && rm -rf /var/lib/apt/lists/*

# Copy pre-built server files (built locally with yarn nx build server)
COPY dist/server ./dist/server

# Copy shared library build output
COPY dist/libs ./dist/libs

# Copy Prisma schema for runtime
COPY libs/database/src/lib/prisma ./prisma

# Copy node_modules with Prisma client and shared-dto (must be generated locally first)
COPY node_modules/.prisma ./node_modules/.prisma
COPY node_modules/@prisma ./node_modules/@prisma
COPY node_modules/@gt-automotive ./node_modules/@gt-automotive

# Copy package.json from dist/server for production dependencies
WORKDIR /app/dist/server

# Install only production dependencies
RUN npm install --production --ignore-scripts

# Create non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs && \
    chown -R nodejs:nodejs /app

USER nodejs

# Expose port
EXPOSE 3000

# Health check for container monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Run the application
CMD ["node", "main.js"]