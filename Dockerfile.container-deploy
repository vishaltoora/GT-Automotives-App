# GT Automotive Backend Container Deployment
# This Dockerfile implements the architectural fixes learned from container deployment issues
# Use this for manual local container deployment testing

FROM node:20-slim

WORKDIR /app

# Install system dependencies required for Prisma
RUN apt-get update && apt-get install -y openssl && rm -rf /var/lib/apt/lists/*

# Copy built server files (assumes you've run: yarn build:server)
COPY server/dist/ ./server/
COPY libs/database/src/lib/prisma/ ./prisma/

# Copy shared libraries temporarily (assumes you've run: yarn nx build @gt-automotive/shared-dto)
COPY libs/shared/dto/dist/ ./shared-dto-temp/
COPY libs/shared/dto/package.json ./shared-dto-package.json

# Create production package.json with externalized dependencies
COPY <<'EOF' ./package.json
{
  "name": "gt-automotives-backend",
  "version": "local-container-deploy",
  "description": "GT Automotive Backend API - Container Deployment",
  "main": "server/main.js",
  "scripts": {
    "start": "node server/main.js"
  },
  "dependencies": {
    "@prisma/client": "^5.0.0",
    "prisma": "^5.0.0"
  },
  "engines": {
    "node": ">=20"
  }
}
EOF

# Install dependencies and generate Prisma client with proper WASM binaries
RUN npm install --production && \
    npm install @prisma/client@latest prisma@latest && \
    npx prisma generate --schema=./prisma/schema.prisma

# Create proper node_modules structure for shared libraries (critical fix)
RUN mkdir -p ./node_modules/@gt-automotive/shared-dto/dist/ && \
    cp -r ./shared-dto-temp/* ./node_modules/@gt-automotive/shared-dto/dist/ && \
    cp ./shared-dto-package.json ./node_modules/@gt-automotive/shared-dto/package.json && \
    rm -rf ./shared-dto-temp ./shared-dto-package.json

# Create non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs && \
    chown -R nodejs:nodejs /app
USER nodejs

EXPOSE 3000

# Start the application (webpack externalized dependencies will be resolved at runtime)
CMD ["node", "server/main.js"]

# Build instructions:
# 1. yarn build:server
# 2. yarn nx build @gt-automotive/shared-dto  
# 3. docker build -t gt-backend:local-container -f Dockerfile.container-deploy .
# 4. docker run -p 3000:3000 -e DATABASE_URL="..." -e JWT_SECRET="..." gt-backend:local-container